

//testing regex
(Pattern.compile(".+\\$\\$Lambda\\$.+line: -1").matcher("debugtest.LambdaTest$$Lambda$1.674483268.accept(Object) line: -1").matches())

//date arithmetic
(Instant.now().truncatedTo(ChronoUnit.DAYS).minus(java.time.Duration.ofDays(3)).toEpochMilli())
(TimeZone.getTimeZone("Europe/Oslo"))

//figure out duration syntax
(java.time.Duration.ofHours(2).toString());

//bit shifting
int s = 2;
s = s << 3;


//optional based control flow
(Optional.ofNullable((Integer)4).flatMap( a -> java.util.Optional.ofNullable(a + 2)).orElseGet(() -> 3 + 2))

// get a UUID
(UUID.randomUUID().toString())

//XML types
(DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-04-23T23:00:00.000+02:00").toGregorianCalendar())

//formatting strings
(String.format("%e, %tT and %s", 1.0, new Date(), "three"));

(Arrays.toString(new String[]{"en", "to", "tre"}))

java.time.Duration.parse("PT2H")





